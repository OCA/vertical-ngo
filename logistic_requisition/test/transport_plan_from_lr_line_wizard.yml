-
    In order to test the creation of a Transport Plans from LR Line through
    the proper wizard, I create a logistic requisition
-
  !record {model: logistic.requisition, id: logistic_requisition_tpw_01}:
    partner_id: base.res_partner_4
    consignee_id: base.res_partner_3
    date_delivery: !eval "time.strftime('%Y-%m-%d')"
    user_id: base.user_demo
    pricelist_id: product.list0
-
  And I add a first line with an assignee
-
  !record {model: logistic.requisition.line, id: logistic_requisition_line_tpw_01}:
    requisition_id: logistic_requisition_tpw_01
    product_id: product.product_product_7
    requested_qty: 100
    date_delivery: !eval "time.strftime('%Y-%m-%d')"
    logistic_user_id: base.user_demo
-
  And I add a first source line
-
  !record {model: logistic.requisition.source, id: logistic_requisition_source_tpw_01}:
    requisition_line_id: logistic_requisition_line_tpw_01
    proposed_qty: 100
    proposed_product_id: product.product_product_7
    transport_applicable: 1
    procurement_method: wh_dispatch
-
  And I add a second line with an assignee
-
  !record {model: logistic.requisition.line, id: logistic_requisition_line_tpw_02}:
    requisition_id: logistic_requisition_tpw_01
    product_id: product.product_product_8
    requested_qty: 100
    date_delivery: !eval "time.strftime('%Y-%m-%d')"
    logistic_user_id: base.user_demo
-
  And I add a second source line
-
  !record {model: logistic.requisition.source, id: logistic_requisition_source_tpw_02}:
    requisition_line_id: logistic_requisition_line_tpw_02
    proposed_qty: 100
    proposed_product_id: product.product_product_8
    transport_applicable: 1
    procurement_method: wh_dispatch
-
  When I confirm the logistic requisition
-
  !python {model: logistic.requisition}: |
    req = self.browse(cr, uid, ref("logistic_requisition_tpw_01"))
    req.button_confirm()
-
  Then the state of the line 1 should be assigned
-
  !assert {model: logistic.requisition.line, id: logistic_requisition_line_tpw_01, string: The line should be assigned}:
    - state == 'assigned'
-
  And the state of the line 2 should be assigned
-
  !assert {model: logistic.requisition.line, id: logistic_requisition_line_tpw_02, string: The line should be confirmed}:
    - state == 'assigned'
-
  When I select both lines and create a Transport Plan with the wizard
  called Create Transport Plan
-
  !python {model: logistic.requisition.source.transport.plan}: |
    context = {'active_model': 'logistic.requisition.source',
               'active_ids': [ref('logistic_requisition_source_tpw_01'),
                              ref('logistic_requisition_source_tpw_02')
                             ],
               }
    import time
    wizard_id = self.create(cr, uid,
                            {'date_eta': time.strftime('%Y-%m-%d'),
                             'from_address_id': ref('base.res_partner_5'),
                             'to_address_id': ref('base.res_partner_6'),
                             'transport_estimated_cost': 12000,
                             'note': "A comment....",
                            },
                            context=context)
    self.create_and_affect(cr, uid, [wizard_id], context=context)
-
  Then the logistic requisition source 1 should be linked to the
  transport plan
-
  !assert {model: logistic.requisition.source, id: logistic_requisition_source_tpw_01, string: the requisition source should be linked to transport plan}:
    - transport_plan_id != False
    - transport_plan_id != None
-
  And the logistic requisition source 2 should be linked to the
  transport plan
-
  !assert {model: logistic.requisition.source, id: logistic_requisition_source_tpw_02, string: the requisition source should be linked to transport plan}:
    - transport_plan_id != False
    - transport_plan_id != None
-
  When I mark the logistic requisition line 1 as sourced
-
  !python {model: logistic.requisition.line}: |
    req = self.browse(cr, uid, ref("logistic_requisition_line_tpw_01"))
    req.button_sourced()
-
  Then the state of the line 1 should be sourced
-
  !assert {model: logistic.requisition.line, id: logistic_requisition_line_tpw_01, string: The line should be sourced}:
    - state == 'sourced'

-
  When I mark the logistic requisition line 2 as sourced
-
  !python {model: logistic.requisition.line}: |
    req = self.browse(cr, uid, ref("logistic_requisition_line_tp_02"))
    req.button_sourced()
-
  Then the state of the line 2 should be sourced
-
  !assert {model: logistic.requisition.line, id: logistic_requisition_line_tp_02, string: The line should be sourced}:
    - state == 'sourced'

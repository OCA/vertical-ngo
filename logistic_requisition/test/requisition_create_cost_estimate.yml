-
  Given I create a logistic requisition
-
  !record {model: logistic.requisition, id: logistic_requisition_cost_estimate_01}:
    partner_id: base.res_partner_4
    consignee_id: base.res_partner_3
    date_delivery: !eval "time.strftime('%Y-%m-%d')"
    user_id: base.user_demo
-
  And I add a line 1
-
  !record {model: logistic.requisition.line, id: logistic_requisition_line_cost_estimate_01}:
    requisition_id: logistic_requisition_cost_estimate_01
    product_id: product.product_product_7
    requested_qty: 100
    date_delivery: !eval "time.strftime('%Y-%m-%d')"
    budget_tot_price: 1000
    logistic_user_id: base.user_demo
    transport_applicable: 0
-
  And I add a line 2
-
  !record {model: logistic.requisition.line, id: logistic_requisition_line_cost_estimate_02}:
    requisition_id: logistic_requisition_cost_estimate_01
    product_id: product.product_product_8
    requested_qty: 100
    date_delivery: !eval "time.strftime('%Y-%m-%d')"
    budget_tot_price: 1000
    logistic_user_id: base.user_demo
    transport_applicable: 0
-
  When I confirm the logistic requisition
-
  !python {model: logistic.requisition}: |
    req = self.browse(cr, uid, ref("logistic_requisition_cost_estimate_01"))
    req.button_confirm()
-
  And I source the lines
-
  !python {model: logistic.requisition.line}: |
    line1_id = ref("logistic_requisition_line_cost_estimate_01")
    line2_id = ref("logistic_requisition_line_cost_estimate_02")
    ids = [line1_id, line2_id]
    # The initial yaml does not set it to false, probably
    # a bug related to the application of the default values
    # However, we need to not have this flag to source the lines
    self.write(cr, uid, ids, {'transport_applicable': False})
    self.button_sourced(cr, uid, ids)
-
  I open the wizard to create a cost estimate from the logistic requisition
-
  !python {model: logistic.requisition.cost.estimate}: |
    context = {'active_model': 'logistic.requisition',
               'active_ids': [ref('logistic_requisition_cost_estimate_01')],
               }
    wizard_id = self.create(cr, uid, {}, context=context)
    open_action = self.cost_estimate(cr, uid, wizard_id)
    cost_estimate_id = open_action['res_id']
    cost_estimate_obj = self.pool.get('sale.order')
    cost_estimate = cost_estimate_obj.browse(cr, uid, cost_estimate_id)
    assert len(cost_estimate.order_line) == 2, (
        "Cost Estimate should have 2 lines, 1 per logistic requisition line")
